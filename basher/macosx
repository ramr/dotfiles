#!/bin/bash

# set -o posix

function _volume_mute_control() {
  local opt=${1:-"false"}
  local cmd="set volume without output muted"

  case "${opt}" in
    with|on|true|1)      cmd="set volume with output muted"     ;;
    without|off|false|0) cmd="set volume without output muted"  ;;
  esac

  osascript -e "tell application \"System Events\" to ${cmd}"

}  #  End of function  volumecontrol.


function _toggle_volume_mute() {
  local current=$(osascript -e 'output muted of (get volume settings)')
  if [ "${current}" = "false" ]; then
    _volume_mute_control "on"
  else
    _volume_mute_control "off"
  fi

}  #  End of function   toggle_volume_mute.


function termrun() {
  osascript 2>/dev/null <<EOF
    tell application "Terminal"
      do script with command "cd \"$PWD\; $@" in window 1
    end tell
EOF

}  #  End of function  termrun.


#  From HN: https://news.ycombinator.com/item?id=10143143
function InTheHallOfTheMountainKing() {
  say -v cellos dum dum dum dum dum dum dum he he he ho ho ho  \
         fa lah lah lah lah lah lah fa lah full hoo hoo hoo

}  #  End of function  InTheHallOfTheMountainKing.


#  From HN: https://news.ycombinator.com/item?id=10143143
function ChopinFuneralMarch() {
  say -v Bad dum dum dum dum dum dum dum dum dum dum dum dum dum dum dum  \
         dum dum dum dum dum dum dum

}  #  End of function  ChopinFuneralMarch.


#  From HN: https://news.ycombinator.com/item?id=10143143
function VoicesInMyHead() {
  for voice in $(say --voice="?" | awk "{print $1}"); do
    say -v "$voice" "Hello ${1:${USER}}";
  done

}  #  End of function  VoicesInMyHead.


#  From HN: https://news.ycombinator.com/item?id=10143143
function clipboard() {
  [ -t 0 ] && pbpaste || pbcopy

}  #  End of function  clipboard.


function _macosx__setup_python_startup() {
  export PYTHONSTARTUP=~/.pythonrc

}  #  End of function  _macosx__setup_python_startup.


function _macosx__setup_aliases() {
  alias clip="clipboard"
  alias hinv="system_profiler"
  alias hinv-ports="networksetup -listallhardwareports"

  alias vers='sw_vers'

  alias airport="/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport"
  alias wifi-info="airport -I"
  alias wifi-disconnect="airport -z"

  alias trun="termrun"
  alias spindump-off="spindumpctl off > /dev/null 2>&1"
  alias cupswebon="cupsctl WebInterface=yes"
  alias cupsweboff="cupsctl WebInterface=no"

  alias sha256sum="shasum -a 256"

  alias mutevol="_volume_mute_control on"
  alias unmutevol="_volume_mute_control off"
  alias togglemutevol="_toggle_volume_mute"

}  #  End of function  _macosx__setup_aliases.


function _macosx__setup_bash_completion() {
  local bc="$(brew --prefix)/etc/bash_completion)"
  [ -f "$bc" ]  &&  source "$bc"

}  #  End of function _macosx__setup_bash_completion


function _macosx__setup_docker() {
  #  boot2docker env.
  #  Exported env vars returned by: $(boot2docker shellinit)
  export DOCKER_HOST=tcp://192.168.59.103:2376
  export DOCKER_CERT_PATH=/Users/ramr/.boot2docker/certs/boot2docker-vm
  export DOCKER_TLS_VERIFY=1

}  #  End of function _macosx__setup_docker.


#
#  main():
#
_macosx__setup_aliases

_macosx__setup_bash_completion

_macosx__setup_python_startup

_macosx__setup_docker
