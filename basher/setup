#!/bin/bash

BASHER_SRC_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
DOTFILES_DIR=$(cd "$(dirname "$BASHER_SRC_DIR")" && pwd)

BASHER_SOURCES="aliases utils completions scrapper colors sccmutils vms ide"
BASHER_CUSTOM_SOURCES="docker rhwork"  #  crwork rhlibra
BASHER_LINUX_SOURCES="linux ssh-agent-setup"
BASHER_MACOSX_SOURCES="macosx"


# User specific aliases and functions
function get_basher_dir() {
  echo "${BASHER_SRC_DIR}"

}  #  End of function  get_basher_dir.


function _setup_env() {
  #  History setup.
  export HISTSIZE=1000
  export HISTFILESIZE=2000

  shopt -s histappend

  #  language and workarea.
  export LANG=C
  export WORKAREA=~/work
  export ANDROID_SDK_HOME=~/android/sdk/platform-tools

  #  path.
  export PATH=~/bin:$DOTFILES_DIR/scripts:/usr/local/bin:/usr/local/sbin:/opt/local/bin:/opt/local/sbin:/opt/local/bin:/opt/local/sbin:~/android/sdk/platform-tools:${PATH}

}  #  End of function  _setup_env.


function _load_sources() {
  local custom="${BASHER_CUSTOM_SOURCES}"

  case "$(uname -s)" in
    Linux)  custom="${custom} ${BASHER_LINUX_SOURCES}" ;;
    Darwin) custom="${custom} ${BASHER_MACOSX_SOURCES}" ;;
    *)  ;;
  esac

  for f in $(echo "${BASHER_SOURCES} ${custom}"); do
    local fname="$(get_basher_dir)/$f"

    #  Source file if it exists.
    [ -f "$fname" ]  &&  source "$fname"
  done

}  #  End of function  _load_sources.


function _setup_prompt() {
  #  Set prompt to also contain git info.
  export PS1="[\u@\h \W $GREEN\$(get_git_prompt_bits)$BLACK]\$ "
  # export PS1="[üç∫  \u@\h \W $GREEN\$(get_git_prompt_bits)$BLACK]\$ "

}  #  End of function  _setup_prompt.


function _basher_setup() {
  _setup_env

  _load_sources

  _setup_prompt

}  #  End of function  _basher_setup.


#
#  main():
#
_basher_setup
